"PHISH WWW Site"_pws - "PHISH Documentation"_pd - "Bait.py Commands"_pc :c

:link(pws,http://phish.sandia.gov)
:link(pd,Manual.html)
:link(pc,Bait.html)

:line

phish_callback() function :h3

[C syntax:]

void phish_callback(void (*alldonefunc)(), void (*abortfunc)()) :pre

[C examples:]

#include "phish.h"
phish_callback(mydone,NULL);
phish_callback(NULL,myabort);
phish_callback(mydone,myabort);

[C++ syntax:]

void callback(void (*alldonefunc)(), void (*abortfunc)()) :pre

[C++ examples:]

#include "phish.hpp"
PHISH::callback(mydone,NULL);
PHISH::callback(NULL,myabort);
PHISH::callback(mydone,myabort);

[Python syntax:]

def callback(alldonefunc,abortfunc) :pre

[Python examples:]

import phish
phish.callback(mydone,None)
phish.callback(None,myabort)
phish.callback(mydone,myabort) :pre

[Description:]

This is a PHISH library function which can be called from a minnow
application.  In PHISH lingo, a "minnow" is a stand-alone application
which makes calls to the "PHISH library"_Library.html.

This function allows you to define 2 callback functions which the
PHISH library will use to call back to the minnow under specific
conditions.  If one or both is not set, which is the default, then the
PHISH library does not make a callback.

:line

The alldonefunc() function is used to specify a callback function
invoked by the PHISH library when all the minnow's input ports have
been closed.  The callback function should have the following form:

void alldonefunc() \{
\} :pre

or

def alldonefunc() :pre

in Python,

where "alldonefunc" is replaced by a function name of your choice.  A
minnow might use the function to print out some final statistics
before the PHISH library exits.  See the
"phish_close"_phish_close.html function and "shutdown
section"_Minnows.html#shutdown of the "Minnows"_Minnows.html doc page,
for more discussion of how a school of minnows closes ports and shuts
down.

:line

The abortfunc() function is used to specify a callback function that
invoked by the PHISH library when "phish_error"_phish_error.html is
called, either by the minnow, or internally by the PHISH library.

The callback function should have the following form:

void abortfunc(int flag) \{
\} :pre

or

def abortfunc(flag) :pre

in Python,

where "abortfunc" is replaced by a function name of your choice.

As explained on the "phish_error"_phish_error.html doc page, the
phish_error() function prints a message and then causes the minnow
itself and the entire school of PHISH minnows to exit.  If this
callback is defined, the PHISH library will call the function before
exiting.  This can be useful if the minnow wishes to close files or
otherwise clean-up.  The function should not make additional calls to
the PHISH library, as it may be in an invalid state, depending on the
error condition.

TIM: what is the flag?

:line

[Restrictions:]

This function can be called anytime.  It is the only PHISH library
function that can be called before "phish_init"_phish_check.html has
been called, which can be useful if you wish to do some clean-up via
abortfunc() even if phish_init() encounters an error.

[Related commands:]

"phish_error"_phish_error.html, "phish_abort"_phish_error.html
