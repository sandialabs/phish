"PHISH WWW Site"_pws - "PHISH Documentation"_pd - "Bait.py Commands"_pc :c

:link(pws,http://phish.sandia.gov)
:link(pd,Manual.html)
:link(pc,Bait.html)

:line

phish_error() function :h3
phish_warn() function :h3

[C syntax:]

void phish_error(char *str) :pre
void phish_warn(char *str) :pre

[C examples:]

phish_error("Bad datum received");
phish_warn("May overflow internal buffer");

[Python syntax:]

def error(str) :pre
def warn(str) :pre

[Python examples:]

import phish
phish.error("Bad datum received")
phish.warn("May overflow internal buffer") :pre

[Description:]

There are PHISH library functions which can be called from a minnow
application.  In PHISH lingo, a "minnow" is a stand-alone application
which makes calls to the "PHISH library"_Library.html.

The phish_error() function prints the specified character string (str)
to the screen, and forces the running minnow to exit.  None of the
minnows ports are closed, which would trigger messages to other
minnows, so no other minnows are explicitly told about the failed
minnow.

For the MPI version of the library, phish_error() makes a final call
to MPI_Abort(), which should force all minnows to exit, as well as the
calling "mpirun" command.

NOTE: how does this work for socket version?

The error message is printed in this format:

ERROR: Minnow exename ID idminnow # idglobal: message :pre

where exename is the name of executable minnow file (not the full
path, just the filename), idminnow is the ID of the minnow as
specified in the PHISH input script, idglobal is the global-ID of the
minnow, and message is the error message.  Each minnow has a global ID
from 0 to Nglobal-1, where Nglobal is the total number of minnows in
the school of minnows specified by the PHISH input script.  This
supplementary information is helpful in debugging which minnow
generated the error message.

The phish_warning() function prints the specified character string
(str) to the screen, with the same supplementary information as
phish_error().  Control is returned to the calling minnow which can
continue on.

[Restrictions:] none

[Related commands:] none
