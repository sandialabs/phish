"Previous Section"_Bait.html - "PHISH WWW Site"_pws -
"LAMMPS Documentation"_pd - "Next Section"_Library.html :c

:link(pws,http://phish.sandia.gov)
:link(pd,Manual.html)

:line

3. PHISH Minnows :h3

In PHISH lingo, a "minnow" is a stand-alone application which makes
calls to the "PHISH library"_Library.html.  Typically they are small
programs which perform a single task, e.g. they parse a string into
keywords and store statistics on those keywords.

Hooked together by connections to other sets, in various communication
patterns

Often come in sets as specified by input script.  Parallel if working
in tandem with other duplicate minnows, each processing a subset of
datums.

This doc page covers these topics:

"Structure of a minnow"_#minnow_1
"Communication via ports"_#minnow_2
"Shutting down a minnow"_#minnow_3
"Debugging a minnow"_#minnow_4 :ul

This is a list of minnows in the minnow sub-directory of the PHISH
distribution.  Some are written in C++, some in Python, some in both:

"count"_count.html
"file2fields"_file2fields.html
"file2words"_file2words.html
"filegen"_filegen.html
"ping"_ping.html
"pong"_pong.html
"print"_print.html
"readgraph"_readgraph.html
"rmat"_rmat.html
"slowdown"_slowdown.html
"sort"_sort.html :ul

These are special minnows which can wrap stand-alone non-PHISH
applications which read from stdin and write to stdout, so that they
can be used in as minnows in a PHISH program:

"wrapsink"_wrapsink.html
"wrapsource"_wrapsource.html
"wrapss"_wrapss.html :ul

These are simple stand-alone applications that are examples of code
that can be wrapped by the "wrap" minnows:

"echo"_echo.html
"reverse"_reverse.html :ul

:line
:line

Structure of a minnow :link(minnow_1),h4

Best way to make sense of what a minnow does is examine a few
simple ones from the minnow dir.

command line args
setup calls to lib
setting callbacks

when to make various kinds of lib calls

Deinfe ports as in connect command

loop vs probe vs recv

receving and unpacking a datum

packing and sending a datum

:line

Communication via ports :link(minnow_2),h4

:line

Shutting down a minnow :link(minnow_3),h4

regular datum vs done message

For a PHISH program whose minnows operate in a pipelined
one-directional fashion (e.g. one or more minnows read input,
send datums to a 2nd set of minnows, on to a 3rd set, etc), it
is typically sufficient to trigger an orderly shutdown of
the entire program 

one-way schools, triggered by head
done messages, per port level
close ports explicitly or implicitly
calls to exit, close, etc
special care for ring or chain connections
or when school has loops
Ctrl-C option
output at end

shutdown in ZMQ is buggy

:line

Debuggind a minnow :link(minnow_4),h4
