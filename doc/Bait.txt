"Previous Section"_Intro.html - "PHISH WWW Site"_pws -
"LAMMPS Documentation"_pd - "Next Section"_Minnows.html :c

:link(pws,http://phish.sandia.gov)
:link(pd,Manual.html)

:line

2. Bait.py Setup Tool :h3

Bait.py is a Python program which converts a PHISH input script into a
MPI configuration file or shell script which can be used to launch a
school of minnows, i.e. to run a PHISH calculation.  You can edit the
input script or pass it different parameters via bait.py command-line
arguments to change the calculation, in which case you need to rerun
bait.py to create a new launch script.

The remainder of this page discusses how bait.py is used and how a
PHISH input script is formatted.  There are separate doc pages for
each PHISH input script command recognized by bait.py.

"Running bait.py"_#bait_1 :ulb,l
"Command-line arguments"_#bait_2 :l
"Input script syntax and parsing"_#bait_3 :l
Input script commands :l
 "variable"_bait_variable.html :ulb,l
 "set"_bait_set.html :l
 "minnow"_bait_minnow.html :l
 "connect"_bait_connect.html :l
 "layout"_bait_layout.html :ule,l
:ule

NOTE" include a diagram of a simple algorithm (e.g. MapReduce word
count), show the corresponding PHISH input script?

:line
:line

Running bait.py :link(bait_1),h4

The bait.py Python script is in the bait sub-directory of the
distribution.

To run it on an input script in another directory, you
simply point to it.

use python
or edit the first line of bait.py
make sure it is executable via chmod

bait.py -switch values ... < in.script

Command-line args for -switch and their values are discussed in
the next section.

:line

Command-line arguments :link(bait_1),h4

each has a default

-np Np
 Np = process count
 default = 1
-var ID str1 str2 ...
 assign strings to a variable ID
 default = no variables defined
-output filename
 filename = MPI config file to create
 default = "outfile"
-path path1:path2:path3:...
 colon-seperated paths to prepend to app executable names
 default = "."
-mode style
 manner in launching PHISH job
 style = "mpich" or "openmpi" or "socket"
 default = "mpich"

each switch has an allowed abbreviation

-np or -n
-var or -v
-configfile or -c
-path or -p
-mode or -m

NOTE: does np have to match layout sum?

:line

Input script syntax and parsing :link(bait_1),h4

A PHISH input script is a text file that
contains commands recognized by the bait.py tool.

command = name + args, separated by whitespace

continuation char

parsing rules

blank lines OK
comment char = #, delete all trailing
continuation char = &, with nothing following (including spaces)

variables are as follows ...

variable substitution:

what are rules for this?
should probably be $a for single-char variable, ${abc} for multichar

